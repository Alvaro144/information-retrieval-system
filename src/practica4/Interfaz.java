package practica4;

import java.awt.BorderLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import org.apache.lucene.document.Document;
import org.apache.lucene.facet.DrillSideways;
import org.apache.lucene.facet.FacetResult;
import org.apache.lucene.facet.Facets;
import org.apache.lucene.facet.LabelAndValue;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopDocs;


public class Interfaz extends javax.swing.JFrame {
    
    Buscar busqueda;
    boolean filtrada = false;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        doc_encontrados.setVisible(false);
        Autores_desplegable.setVisible(false);
        Año_desplegable.setVisible(false);
        AutorK_desplegable.setVisible(false);
        IndexK_desplegable.setVisible(false);
        como_construido.setEnabled(false);
        
        // Enter para pulsar boton
        this.getRootPane().setDefaultButton(buscar);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        explanationFrame = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        query_autor = new javax.swing.JTextField();
        query_titulo = new javax.swing.JTextField();
        query_año = new javax.swing.JTextField();
        query_autorkey = new javax.swing.JTextField();
        query_indexkey = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        query_free = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        salida_docs = new javax.swing.JTextArea();
        doc_encontrados = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        query_resumen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        no_incluir_autor = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        no_incluir_titulo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        no_incluir_autorkey = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        no_incluir_indexkey = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        no_incluir_año = new javax.swing.JTextField();
        Autores_desplegable = new javax.swing.JComboBox<>();
        Año_desplegable = new javax.swing.JComboBox<>();
        AutorK_desplegable = new javax.swing.JComboBox<>();
        IndexK_desplegable = new javax.swing.JComboBox<>();
        filtrar = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        deshacer = new javax.swing.JButton();
        como_construido = new javax.swing.JButton();

        javax.swing.GroupLayout explanationFrameLayout = new javax.swing.GroupLayout(explanationFrame.getContentPane());
        explanationFrame.getContentPane().setLayout(explanationFrameLayout);
        explanationFrameLayout.setHorizontalGroup(
            explanationFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        explanationFrameLayout.setVerticalGroup(
            explanationFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Interfaz de búsqueda");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Búsqueda por Autor");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Búsqueda por título");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Búsqueda por Año");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Búsqueda por autor keywords");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Búsqueda por index keywords");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Búsqueda libre");

        buscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        salida_docs.setColumns(20);
        salida_docs.setRows(5);
        salida_docs.setFocusable(false);
        jScrollPane2.setViewportView(salida_docs);

        doc_encontrados.setFocusable(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Búsqueda por resumen");

        query_resumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                query_resumenActionPerformed(evt);
            }
        });

        jLabel9.setText("Excluir");

        jLabel10.setText("Excluir");

        jLabel11.setText("Excluir");

        jLabel12.setText("Excluir");

        jLabel14.setText("Excluir");

        Autores_desplegable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        Autores_desplegable.setToolTipText("Seleccione...");
        Autores_desplegable.setAction(buscar.getAction());

        AutorK_desplegable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorK_desplegableActionPerformed(evt);
            }
        });

        filtrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        filtrar.setText("Filtrar");
        filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        deshacer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deshacer.setText("Deshacer");
        deshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deshacerActionPerformed(evt);
            }
        });

        como_construido.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        como_construido.setText("Cómo se construyó");
        como_construido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                como_construidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(query_free, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(query_resumen)
                            .addComponent(query_año)
                            .addComponent(query_indexkey)
                            .addComponent(query_autorkey))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(no_incluir_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(no_incluir_autor, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Autores_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(no_incluir_autorkey, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AutorK_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(no_incluir_indexkey, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(IndexK_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(no_incluir_año, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Año_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deshacer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(88, 88, 88)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(como_construido, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(filtrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(query_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(query_autor, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(doc_encontrados, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(query_autor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(no_incluir_autor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(Autores_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(query_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(no_incluir_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(query_autorkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(no_incluir_indexkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(IndexK_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(query_indexkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(no_incluir_año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Año_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(query_año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(no_incluir_autorkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AutorK_desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(query_resumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(query_free, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(54, 54, 54)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(filtrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reset)
                            .addComponent(deshacer)))
                    .addComponent(como_construido))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doc_encontrados, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
       
        // Limpiar pantalla
        
        doc_encontrados.setText("");
        salida_docs.setText("");
        Año_desplegable.removeAllItems();
        Autores_desplegable.removeAllItems();
        IndexK_desplegable.removeAllItems();
        AutorK_desplegable.removeAllItems();

        // Para saber las consultas que ha ingresado el usuario
        String[] campos = {null,null,null,null,null,null,null};
        filtrada = false;
        explanationFrame.setEnabled(true);
        // Marcamos las consultas que ha introducido el usuario
        if(query_autor.getText().length() > 0){
             campos[0] = query_autor.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
        }
        if(query_titulo.getText().length() > 0){
             campos[1] = query_titulo.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
        }
        if(query_autorkey.getText().length() > 0){
             campos[2] = query_autorkey.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
        }
        if(query_indexkey.getText().length() > 0){
             campos[3] = query_indexkey.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
             
        }
        if(query_año.getText().length() > 0){
             //consultas[4] = true;
             campos[4] = query_año.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
             
        }
        if(query_resumen.getText().length() > 0){
             campos[5] = query_resumen.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
        }
        if(query_free.getText().length() > 0){
             campos[6] = query_free.getText();
             Autores_desplegable.setVisible(true);
             Año_desplegable.setVisible(true);
             AutorK_desplegable.setVisible(true);
             IndexK_desplegable.setVisible(true);
        }
        
        // Para las exclusiones
        // Para saber las consultas que ha ingresado el usuario
        String[] campos_excluidos = {null,null,null};
        
        // Marcamos las consultas que ha introducido el usuario
        if(no_incluir_autor.getText().length() > 0){
             //consultas_excluidas[0] = true;
             campos_excluidos[0] = no_incluir_autor.getText();
        }
        if(no_incluir_titulo.getText().length() > 0){
             //consultas_excluidas[1] = true;
             campos_excluidos[1] = no_incluir_titulo.getText();
        }
        if(no_incluir_año.getText().length() > 0){
             //consultas_excluidas[2] = true;
             campos_excluidos[2] = no_incluir_año.getText();
        }     
        
        
        try {
            // Construimos la búsqueda con el array de booleanos para ver
            // los campos los que consulta
            busqueda = new Buscar(campos,campos_excluidos);
            // Configuramos la búsqueda
            busqueda.configurar_busqueda();
            // Recogemos el objeto de documentos ordenados
            TopDocs docs = busqueda.get_TopDocs_consulta();
            // Imprimimos en interfaz
            doc_encontrados.setText("Documentos encontrados: " + docs.totalHits);
            // Hacemos visible la cantidad de hits
            doc_encontrados.setVisible(true);
            
            if( docs.totalHits.value == 0){
                como_construido.setEnabled(false);
            }else{
                como_construido.setEnabled(true);
            }

            ArrayList<Integer> pos_ocurrencias = busqueda.ocurrencias();
            int pos_array_ocurrencias = 0;
            int contador_docs = 0;
            // Rellenamos el cuadro de salida
            for(ScoreDoc sd : docs.scoreDocs){
                Document d = busqueda.searcher.doc(sd.doc);
                //Si sigue habiendo libros con todas las palabras
                if( pos_array_ocurrencias < pos_ocurrencias.size()){
                    
                    if(contador_docs == pos_ocurrencias.get(pos_array_ocurrencias)){
                        salida_docs.append(("Score: "+ sd.score + " Libro: " + d.get("Titulo") + "\n"));
                        salida_docs.append("        ***** Este documento contiene todas las palabras **** \n");
                        pos_array_ocurrencias++;
                    }else{
                        salida_docs.append(("Score: "+ sd.score + " Libro: " + d.get("Titulo") + "\n"));
                    }
                       
                }else{
                    salida_docs.append(("Score: "+ sd.score + " Libro: " + d.get("Titulo") + "\n"));
                }
                contador_docs++;
            }

            
                      
            //****************      PARA FACETAS *****************
            
            // Tomamos las facetas de la consulta
            Facets facetas = busqueda.get_facetas();
            
            List<FacetResult> todasDims = facetas.getAllDims(100);
            for(FacetResult fr : todasDims){
                LabelAndValue[] lv = fr.labelValues;
                switch (fr.dim){
                    case "Autor":
                        // Guardamos en desplegable de facetas de autor
                        for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                            Autores_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                        }
                        break;

                    case "Año":
                        for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                            Año_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                        }
                        break;
                        
                    case "AuthorKeywords":
                        for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                            AutorK_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                        }
                        break;
                        
                    case "IndexKeywords":
                        for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                            IndexK_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                        }
                        break;
                }
            }
            //Deseleccionamos para que no se ponga la primera como default
            Autores_desplegable.setSelectedItem(null);
            Año_desplegable.setSelectedItem(null);
            AutorK_desplegable.setSelectedItem(null);
            IndexK_desplegable.setSelectedItem(null);

        } catch (ParseException | IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_buscarActionPerformed

    private void query_resumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_query_resumenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_query_resumenActionPerformed

    private void AutorK_desplegableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorK_desplegableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AutorK_desplegableActionPerformed

    private void filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarActionPerformed
        filtrada = true;
        como_construido.setEnabled(false);
        String [] filtros = {null,null,null,null};
        
        doc_encontrados.setText("");
        salida_docs.setText("");
        
        //*************     RECOGER LAS FACETAS SELECCIONADAS
        if(Autores_desplegable.getSelectedItem() != null){
            // Cogemos el valor de la faceta quitando el score
            filtros[0] = eliminar_scores(Autores_desplegable.getSelectedItem().toString());
        }
        if(Año_desplegable.getSelectedItem() != null){
            filtros[1] = eliminar_scores(Año_desplegable.getSelectedItem().toString());
        }
        if(AutorK_desplegable.getSelectedItem() != null){
            filtros[2] = eliminar_scores(AutorK_desplegable.getSelectedItem().toString());
        }
        if(IndexK_desplegable.getSelectedItem() != null){
            filtros[3] = eliminar_scores(IndexK_desplegable.getSelectedItem().toString());
        }
        
        //*************     RECORRER LOS DOCS
        DrillSideways.DrillSidewaysResult ddq = null;
        try {
            ddq = busqueda.gestionar_filtros(filtros);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(ScoreDoc scoreDoc : ddq.hits.scoreDocs){
            Document doc = null;
            try {
                doc = busqueda.searcher.doc(scoreDoc.doc);
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
            salida_docs.append(("Score: "+scoreDoc.score + " Libro: " + doc.get("Titulo") + "\n"));
        }
        
        doc_encontrados.setText("Documentos encontrados: " + ddq.hits.totalHits);

        //****************   PARA RELLENAR FACETAS TRAS DRILL   *****************
        Año_desplegable.removeAllItems();
        Autores_desplegable.removeAllItems();
        IndexK_desplegable.removeAllItems();
        AutorK_desplegable.removeAllItems();
        Facets facetas = null;
        try {
            facetas = busqueda.get_facetas_drill();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<FacetResult> todasDims = null;
        try {
            todasDims = facetas.getAllDims(100);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(FacetResult fr : todasDims){
            LabelAndValue[] lv = fr.labelValues;

            switch (fr.dim){

                case "Autor":
                    for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                        Autores_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                    }
                    break;

                case "Año":
                    for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                        Año_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                    }
                    break;

                case "AuthorKeywords":
                    for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                        AutorK_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                    }
                    break;

                case "IndexKeywords":
                    for(int i=0; (i<20 && i< fr.labelValues.length); i++){
                        IndexK_desplegable.addItem(lv[i].label+ " (" + lv[i].value+")");
                    }
                    break;
            }
        }
    }//GEN-LAST:event_filtrarActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        
        doc_encontrados.setText("");
        salida_docs.setText("");
        query_autor.setText("");
        query_titulo.setText("");
        query_año.setText("");
        query_free.setText("");
        query_resumen.setText("");
        query_autorkey.setText("");
        query_indexkey.setText("");
        Año_desplegable.removeAllItems();
        Autores_desplegable.removeAllItems();
        IndexK_desplegable.removeAllItems();
        AutorK_desplegable.removeAllItems();
        filtrada = false;
        como_construido.setEnabled(false);
        explanationFrame.add(new JScrollPane());
        
    }//GEN-LAST:event_resetActionPerformed

    private void deshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deshacerActionPerformed
        buscarActionPerformed(evt);
    }//GEN-LAST:event_deshacerActionPerformed

    private void como_construidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_como_construidoActionPerformed

        try {
            //**** RESET panel
            explanationFrame.getContentPane().removeAll();
            explanationFrame.revalidate();
            explanationFrame.repaint();
            //*****************
            explanationFrame.setTitle("Cómo se construyó");
            explanationFrame.setLayout(new BorderLayout());
            explanationFrame.pack();
            explanationFrame.setVisible(true);
            explanationFrame.setSize(500, 500);
            explanationFrame.setLocationRelativeTo(null);
            ArrayList<String> explanation = busqueda.get_Explanation(filtrada);
            String texto = "";
            
            for(int i=0;i<explanation.size();i++){
                texto = texto.concat(explanation.get(i));
            }
            
            JTextArea textoexplanation = new JTextArea();
            textoexplanation.append(texto);
            JScrollPane scroll = new JScrollPane (textoexplanation, 
            JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
            explanationFrame.add(scroll);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }    
            
    }//GEN-LAST:event_como_construidoActionPerformed

            
    private String eliminar_scores(String lista){

        String aux = String.valueOf(lista.charAt(0));
        for(int i=1; i<lista.length()-4; i++){
            aux += String.valueOf(lista.charAt(i));
        }
        
        return aux.trim();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });

    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AutorK_desplegable;
    private javax.swing.JComboBox<String> Autores_desplegable;
    private javax.swing.JComboBox<String> Año_desplegable;
    private javax.swing.JComboBox<String> IndexK_desplegable;
    private javax.swing.JButton buscar;
    private javax.swing.JButton como_construido;
    private javax.swing.JButton deshacer;
    private javax.swing.JLabel doc_encontrados;
    private javax.swing.JFrame explanationFrame;
    private javax.swing.JButton filtrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField no_incluir_autor;
    private javax.swing.JTextField no_incluir_autorkey;
    private javax.swing.JTextField no_incluir_año;
    private javax.swing.JTextField no_incluir_indexkey;
    private javax.swing.JTextField no_incluir_titulo;
    private javax.swing.JTextField query_autor;
    private javax.swing.JTextField query_autorkey;
    private javax.swing.JTextField query_año;
    private javax.swing.JTextField query_free;
    private javax.swing.JTextField query_indexkey;
    private javax.swing.JTextField query_resumen;
    private javax.swing.JTextField query_titulo;
    private javax.swing.JButton reset;
    public static javax.swing.JTextArea salida_docs;
    // End of variables declaration//GEN-END:variables
}

